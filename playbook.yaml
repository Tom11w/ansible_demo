- name: Conection to vm test playbook
  hosts: nginx_primary
  become: true
  vars:
    base_path: /srv/www
    pagers:
      page1:
        title: in intersting title
        content: Words and stuff
        path: test.html
      page2:
        title: va vagrefgvat gvgyr
        content: Jbeqf naq fghss
        path: grfg.html
  tasks:

    - block:
      - command: "dnf install -y 'dnf-command(copr)'"
      - command: dnf copr enable -y rpmsoftwaremanagement/dnf-nightly
      - command: dnf install -y -x condor python3-libdnf5

    - name: install nginx
      ansible.builtin.package:
        name: nginx
        state: latest

    - name: Config nginx
      notify: restart nginx
      ansible.builtin.template:
        src: template/nginx.conf.j2
        dest: /etc/nginx/nginx.conf

    - name: Ensure nginx is running
      systemd:
        name: nginx
        state: started
        enabled: true

    - name: permanently enable https service, also enable it immediately if possible
      ansible.posix.firewalld:
        service: https
        state: enabled
        permanent: true
        immediate: true
        offline: true

    - name: permanently enable http service, also enable it immediately if possible
      ansible.posix.firewalld:
        service: http
        state: enabled
        permanent: true
        immediate: true
        offline: true

    - name: Create a directory for html files if it does not exist
      ansible.builtin.file:
        path: "{{ base_path }}"
        state: directory
        mode: '0755'

    - name: generating page 1
      vars:
        page: "{{ pagers.page1 }}"
      ansible.builtin.template:
        src: template/test.j2
        dest: "{{ base_path }}/{{ page.path }}"

    - name: generating page 2
      vars:
        page: "{{ pagers.page2 }}"
      ansible.builtin.template:
        src: template/test.j2
        dest: "{{ base_path }}/{{ page.path }}"

    - name: generating index
      ansible.builtin.template:
        src: template/index.html.j2
        dest: "{{ base_path }}/index.html"


  handlers:
      - name: restart nginx
        service: name=nginx state=restarted
